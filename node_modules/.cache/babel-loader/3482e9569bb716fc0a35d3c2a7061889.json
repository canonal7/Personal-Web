{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useContext, useEffect } from \"react\";\nimport { useOnScreen } from \"./useOnScreen\";\nimport { NavContext } from \"../Nav/NavContext\";\nexport const useNav = navLinkId => {\n  _s();\n\n  const ref = useRef(null);\n  const {\n    setActiveNavLinkId\n  } = useContext(NavContext);\n  const isOnScreen = useOnScreen(ref);\n  useEffect(() => {\n    if (isOnScreen) {\n      setActiveNavLinkId(navLinkId);\n    }\n  }, [isOnScreen, navLinkId, setActiveNavLinkId]);\n  return ref;\n};\n\n_s(useNav, \"jNstnso3n2hAsKZxSOuV97i019E=\", false, function () {\n  return [useOnScreen];\n});","map":{"version":3,"names":["useRef","useContext","useEffect","useOnScreen","NavContext","useNav","navLinkId","ref","setActiveNavLinkId","isOnScreen"],"sources":["/Users/macbook/Desktop/Web/personal_web/Personal-Web/src/Components/CustomHooks/useNav.js"],"sourcesContent":["import { useRef, useContext, useEffect } from \"react\";\nimport { useOnScreen } from \"./useOnScreen\";\nimport { NavContext } from \"../Nav/NavContext\";\nexport const useNav = navLinkId => {\n\tconst ref = useRef(null);\n\tconst {setActiveNavLinkId} = useContext(NavContext);\n\tconst isOnScreen = useOnScreen(ref);\n\n\tuseEffect(()=>{\n\t\tif(isOnScreen){\n\t\t\tsetActiveNavLinkId(navLinkId);\n\t\t}\n\t},[isOnScreen, navLinkId, setActiveNavLinkId]);\n\treturn ref;\n\n}"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,MAAMC,MAAM,GAAGC,SAAS,IAAI;EAAA;;EAClC,MAAMC,GAAG,GAAGP,MAAM,CAAC,IAAD,CAAlB;EACA,MAAM;IAACQ;EAAD,IAAuBP,UAAU,CAACG,UAAD,CAAvC;EACA,MAAMK,UAAU,GAAGN,WAAW,CAACI,GAAD,CAA9B;EAEAL,SAAS,CAAC,MAAI;IACb,IAAGO,UAAH,EAAc;MACbD,kBAAkB,CAACF,SAAD,CAAlB;IACA;EACD,CAJQ,EAIP,CAACG,UAAD,EAAaH,SAAb,EAAwBE,kBAAxB,CAJO,CAAT;EAKA,OAAOD,GAAP;AAEA,CAZM;;GAAMF,M;UAGOF,W"},"metadata":{},"sourceType":"module"}